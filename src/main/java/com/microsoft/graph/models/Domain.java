// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.DomainState;
import com.microsoft.graph.models.DirectoryObject;
import com.microsoft.graph.models.DomainDnsRecord;
import com.microsoft.graph.models.SharedEmailDomainInvitation;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.DirectoryObjectCollectionPage;
import com.microsoft.graph.requests.DomainDnsRecordCollectionPage;
import com.microsoft.graph.requests.SharedEmailDomainInvitationCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Domain.
 */
public class Domain extends Entity implements IJsonBackedObject {


    /**
     * The Authentication Type.
     * 
     */
    @SerializedName(value = "authenticationType", alternate = {"AuthenticationType"})
    @Expose
	@Nullable
    public String authenticationType;

    /**
     * The Availability Status.
     * 
     */
    @SerializedName(value = "availabilityStatus", alternate = {"AvailabilityStatus"})
    @Expose
	@Nullable
    public String availabilityStatus;

    /**
     * The Is Admin Managed.
     * 
     */
    @SerializedName(value = "isAdminManaged", alternate = {"IsAdminManaged"})
    @Expose
	@Nullable
    public Boolean isAdminManaged;

    /**
     * The Is Default.
     * 
     */
    @SerializedName(value = "isDefault", alternate = {"IsDefault"})
    @Expose
	@Nullable
    public Boolean isDefault;

    /**
     * The Is Initial.
     * 
     */
    @SerializedName(value = "isInitial", alternate = {"IsInitial"})
    @Expose
	@Nullable
    public Boolean isInitial;

    /**
     * The Is Root.
     * 
     */
    @SerializedName(value = "isRoot", alternate = {"IsRoot"})
    @Expose
	@Nullable
    public Boolean isRoot;

    /**
     * The Is Verified.
     * 
     */
    @SerializedName(value = "isVerified", alternate = {"IsVerified"})
    @Expose
	@Nullable
    public Boolean isVerified;

    /**
     * The Password Notification Window In Days.
     * 
     */
    @SerializedName(value = "passwordNotificationWindowInDays", alternate = {"PasswordNotificationWindowInDays"})
    @Expose
	@Nullable
    public Integer passwordNotificationWindowInDays;

    /**
     * The Password Validity Period In Days.
     * 
     */
    @SerializedName(value = "passwordValidityPeriodInDays", alternate = {"PasswordValidityPeriodInDays"})
    @Expose
	@Nullable
    public Integer passwordValidityPeriodInDays;

    /**
     * The State.
     * 
     */
    @SerializedName(value = "state", alternate = {"State"})
    @Expose
	@Nullable
    public DomainState state;

    /**
     * The Supported Services.
     * 
     */
    @SerializedName(value = "supportedServices", alternate = {"SupportedServices"})
    @Expose
	@Nullable
    public java.util.List<String> supportedServices;

    /**
     * The Domain Name References.
     * 
     */
	@Nullable
    public DirectoryObjectCollectionPage domainNameReferences;

    /**
     * The Service Configuration Records.
     * 
     */
    @SerializedName(value = "serviceConfigurationRecords", alternate = {"ServiceConfigurationRecords"})
    @Expose
	@Nullable
    public DomainDnsRecordCollectionPage serviceConfigurationRecords;

    /**
     * The Shared Email Domain Invitations.
     * 
     */
    @SerializedName(value = "sharedEmailDomainInvitations", alternate = {"SharedEmailDomainInvitations"})
    @Expose
	@Nullable
    public SharedEmailDomainInvitationCollectionPage sharedEmailDomainInvitations;

    /**
     * The Verification Dns Records.
     * 
     */
    @SerializedName(value = "verificationDnsRecords", alternate = {"VerificationDnsRecords"})
    @Expose
	@Nullable
    public DomainDnsRecordCollectionPage verificationDnsRecords;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("domainNameReferences")) {
            domainNameReferences = serializer.deserializeObject(json.get("domainNameReferences"), DirectoryObjectCollectionPage.class);
        }

        if (json.has("serviceConfigurationRecords")) {
            serviceConfigurationRecords = serializer.deserializeObject(json.get("serviceConfigurationRecords"), DomainDnsRecordCollectionPage.class);
        }

        if (json.has("sharedEmailDomainInvitations")) {
            sharedEmailDomainInvitations = serializer.deserializeObject(json.get("sharedEmailDomainInvitations"), SharedEmailDomainInvitationCollectionPage.class);
        }

        if (json.has("verificationDnsRecords")) {
            verificationDnsRecords = serializer.deserializeObject(json.get("verificationDnsRecords"), DomainDnsRecordCollectionPage.class);
        }
    }
}
