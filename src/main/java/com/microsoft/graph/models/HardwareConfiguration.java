// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.http.BaseCollectionPage;
import com.microsoft.graph.models.HardwareConfigurationFormat;
import com.microsoft.graph.models.HardwareConfigurationAssignment;
import com.microsoft.graph.models.HardwareConfigurationDeviceState;
import com.microsoft.graph.models.HardwareConfigurationRunSummary;
import com.microsoft.graph.models.HardwareConfigurationUserState;
import com.microsoft.graph.models.Entity;
import com.microsoft.graph.requests.HardwareConfigurationAssignmentCollectionPage;
import com.microsoft.graph.requests.HardwareConfigurationDeviceStateCollectionPage;
import com.microsoft.graph.requests.HardwareConfigurationUserStateCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Hardware Configuration.
 */
public class HardwareConfiguration extends Entity implements IJsonBackedObject {


    /**
     * The Configuration File Content.
     * File content of the hardware configuration
     */
    @SerializedName(value = "configurationFileContent", alternate = {"ConfigurationFileContent"})
    @Expose
	@Nullable
    public byte[] configurationFileContent;

    /**
     * The Created Date Time.
     * Timestamp of when the hardware configuration was created. This property is read-only.
     */
    @SerializedName(value = "createdDateTime", alternate = {"CreatedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime createdDateTime;

    /**
     * The Description.
     * Description of the hardware configuration
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
	@Nullable
    public String description;

    /**
     * The Display Name.
     * Name of the hardware configuration
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
	@Nullable
    public String displayName;

    /**
     * The File Name.
     * File name of the hardware configuration
     */
    @SerializedName(value = "fileName", alternate = {"FileName"})
    @Expose
	@Nullable
    public String fileName;

    /**
     * The Hardware Configuration Format.
     * Oem type of the hardware configuration. Possible values are: dell, surface, surfaceDock.
     */
    @SerializedName(value = "hardwareConfigurationFormat", alternate = {"HardwareConfigurationFormat"})
    @Expose
	@Nullable
    public HardwareConfigurationFormat hardwareConfigurationFormat;

    /**
     * The Last Modified Date Time.
     * Timestamp of when the hardware configuration was modified. This property is read-only.
     */
    @SerializedName(value = "lastModifiedDateTime", alternate = {"LastModifiedDateTime"})
    @Expose
	@Nullable
    public java.time.OffsetDateTime lastModifiedDateTime;

    /**
     * The Per Device Password Disabled.
     * A value indicating whether per devcive pasword disabled
     */
    @SerializedName(value = "perDevicePasswordDisabled", alternate = {"PerDevicePasswordDisabled"})
    @Expose
	@Nullable
    public Boolean perDevicePasswordDisabled;

    /**
     * The Role Scope Tag Ids.
     * List of Scope Tag IDs for the hardware configuration
     */
    @SerializedName(value = "roleScopeTagIds", alternate = {"RoleScopeTagIds"})
    @Expose
	@Nullable
    public java.util.List<String> roleScopeTagIds;

    /**
     * The Version.
     * Version of the hardware configuration
     */
    @SerializedName(value = "version", alternate = {"Version"})
    @Expose
	@Nullable
    public Integer version;

    /**
     * The Assignments.
     * List of group assignments for the hardware configuration
     */
    @SerializedName(value = "assignments", alternate = {"Assignments"})
    @Expose
	@Nullable
    public HardwareConfigurationAssignmentCollectionPage assignments;

    /**
     * The Device Run States.
     * List of run states for the hardware configuration across all devices
     */
    @SerializedName(value = "deviceRunStates", alternate = {"DeviceRunStates"})
    @Expose
	@Nullable
    public HardwareConfigurationDeviceStateCollectionPage deviceRunStates;

    /**
     * The Run Summary.
     * Run summary for hardware configuration
     */
    @SerializedName(value = "runSummary", alternate = {"RunSummary"})
    @Expose
	@Nullable
    public HardwareConfigurationRunSummary runSummary;

    /**
     * The User Run States.
     * List of run states for the hardware configuration across all users
     */
    @SerializedName(value = "userRunStates", alternate = {"UserRunStates"})
    @Expose
	@Nullable
    public HardwareConfigurationUserStateCollectionPage userRunStates;


    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(@Nonnull final ISerializer serializer, @Nonnull final JsonObject json) {


        if (json.has("assignments")) {
            assignments = serializer.deserializeObject(json.get("assignments"), HardwareConfigurationAssignmentCollectionPage.class);
        }

        if (json.has("deviceRunStates")) {
            deviceRunStates = serializer.deserializeObject(json.get("deviceRunStates"), HardwareConfigurationDeviceStateCollectionPage.class);
        }

        if (json.has("userRunStates")) {
            userRunStates = serializer.deserializeObject(json.get("userRunStates"), HardwareConfigurationUserStateCollectionPage.class);
        }
    }
}
