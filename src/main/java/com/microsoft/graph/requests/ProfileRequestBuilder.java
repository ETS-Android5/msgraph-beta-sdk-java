// Template Source: BaseEntityRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.models.Profile;
import com.microsoft.graph.requests.UserAccountInformationCollectionRequestBuilder;
import com.microsoft.graph.requests.UserAccountInformationRequestBuilder;
import com.microsoft.graph.requests.ItemAddressCollectionRequestBuilder;
import com.microsoft.graph.requests.ItemAddressRequestBuilder;
import com.microsoft.graph.requests.PersonAnnualEventCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonAnnualEventRequestBuilder;
import com.microsoft.graph.requests.PersonAwardCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonAwardRequestBuilder;
import com.microsoft.graph.requests.PersonCertificationCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonCertificationRequestBuilder;
import com.microsoft.graph.requests.EducationalActivityCollectionRequestBuilder;
import com.microsoft.graph.requests.EducationalActivityRequestBuilder;
import com.microsoft.graph.requests.ItemEmailCollectionRequestBuilder;
import com.microsoft.graph.requests.ItemEmailRequestBuilder;
import com.microsoft.graph.requests.PersonInterestCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonInterestRequestBuilder;
import com.microsoft.graph.requests.LanguageProficiencyCollectionRequestBuilder;
import com.microsoft.graph.requests.LanguageProficiencyRequestBuilder;
import com.microsoft.graph.requests.PersonNameCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonNameRequestBuilder;
import com.microsoft.graph.requests.PersonAnnotationCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonAnnotationRequestBuilder;
import com.microsoft.graph.requests.ItemPatentCollectionRequestBuilder;
import com.microsoft.graph.requests.ItemPatentRequestBuilder;
import com.microsoft.graph.requests.ItemPhoneCollectionRequestBuilder;
import com.microsoft.graph.requests.ItemPhoneRequestBuilder;
import com.microsoft.graph.requests.WorkPositionCollectionRequestBuilder;
import com.microsoft.graph.requests.WorkPositionRequestBuilder;
import com.microsoft.graph.requests.ProjectParticipationCollectionRequestBuilder;
import com.microsoft.graph.requests.ProjectParticipationRequestBuilder;
import com.microsoft.graph.requests.ItemPublicationCollectionRequestBuilder;
import com.microsoft.graph.requests.ItemPublicationRequestBuilder;
import com.microsoft.graph.requests.SkillProficiencyCollectionRequestBuilder;
import com.microsoft.graph.requests.SkillProficiencyRequestBuilder;
import com.microsoft.graph.requests.WebAccountCollectionRequestBuilder;
import com.microsoft.graph.requests.WebAccountRequestBuilder;
import com.microsoft.graph.requests.PersonWebsiteCollectionRequestBuilder;
import com.microsoft.graph.requests.PersonWebsiteRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import javax.annotation.Nullable;
import javax.annotation.Nonnull;
import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Profile Request Builder.
 */
public class ProfileRequestBuilder extends BaseRequestBuilder<Profile> {

    /**
     * The request builder for the Profile
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public ProfileRequestBuilder(@Nonnull final String requestUrl, @Nonnull final IBaseClient<?> client, @Nullable final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @param requestOptions the options for this request
     * @return the ProfileRequest instance
     */
    @Nonnull
    public ProfileRequest buildRequest(@Nullable final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the ProfileRequest instance
     */
    @Nonnull
    public ProfileRequest buildRequest(@Nonnull final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        return new com.microsoft.graph.requests.ProfileRequest(getRequestUrl(), getClient(), requestOptions);
    }


    /**
     *  Gets a request builder for the UserAccountInformation collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public UserAccountInformationCollectionRequestBuilder account() {
        return new UserAccountInformationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("account"), getClient(), null);
    }

    /**
     * Gets a request builder for the UserAccountInformation item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public UserAccountInformationRequestBuilder account(@Nonnull final String id) {
        return new UserAccountInformationRequestBuilder(getRequestUrlWithAdditionalSegment("account") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ItemAddress collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ItemAddressCollectionRequestBuilder addresses() {
        return new ItemAddressCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("addresses"), getClient(), null);
    }

    /**
     * Gets a request builder for the ItemAddress item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ItemAddressRequestBuilder addresses(@Nonnull final String id) {
        return new ItemAddressRequestBuilder(getRequestUrlWithAdditionalSegment("addresses") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonAnnualEvent collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonAnnualEventCollectionRequestBuilder anniversaries() {
        return new PersonAnnualEventCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("anniversaries"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonAnnualEvent item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonAnnualEventRequestBuilder anniversaries(@Nonnull final String id) {
        return new PersonAnnualEventRequestBuilder(getRequestUrlWithAdditionalSegment("anniversaries") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonAward collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonAwardCollectionRequestBuilder awards() {
        return new PersonAwardCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("awards"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonAward item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonAwardRequestBuilder awards(@Nonnull final String id) {
        return new PersonAwardRequestBuilder(getRequestUrlWithAdditionalSegment("awards") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonCertification collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonCertificationCollectionRequestBuilder certifications() {
        return new PersonCertificationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("certifications"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonCertification item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonCertificationRequestBuilder certifications(@Nonnull final String id) {
        return new PersonCertificationRequestBuilder(getRequestUrlWithAdditionalSegment("certifications") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the EducationalActivity collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public EducationalActivityCollectionRequestBuilder educationalActivities() {
        return new EducationalActivityCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("educationalActivities"), getClient(), null);
    }

    /**
     * Gets a request builder for the EducationalActivity item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public EducationalActivityRequestBuilder educationalActivities(@Nonnull final String id) {
        return new EducationalActivityRequestBuilder(getRequestUrlWithAdditionalSegment("educationalActivities") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ItemEmail collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ItemEmailCollectionRequestBuilder emails() {
        return new ItemEmailCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("emails"), getClient(), null);
    }

    /**
     * Gets a request builder for the ItemEmail item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ItemEmailRequestBuilder emails(@Nonnull final String id) {
        return new ItemEmailRequestBuilder(getRequestUrlWithAdditionalSegment("emails") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonInterest collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonInterestCollectionRequestBuilder interests() {
        return new PersonInterestCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("interests"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonInterest item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonInterestRequestBuilder interests(@Nonnull final String id) {
        return new PersonInterestRequestBuilder(getRequestUrlWithAdditionalSegment("interests") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the LanguageProficiency collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public LanguageProficiencyCollectionRequestBuilder languages() {
        return new LanguageProficiencyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("languages"), getClient(), null);
    }

    /**
     * Gets a request builder for the LanguageProficiency item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public LanguageProficiencyRequestBuilder languages(@Nonnull final String id) {
        return new LanguageProficiencyRequestBuilder(getRequestUrlWithAdditionalSegment("languages") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonName collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonNameCollectionRequestBuilder names() {
        return new PersonNameCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("names"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonName item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonNameRequestBuilder names(@Nonnull final String id) {
        return new PersonNameRequestBuilder(getRequestUrlWithAdditionalSegment("names") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonAnnotation collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonAnnotationCollectionRequestBuilder notes() {
        return new PersonAnnotationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("notes"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonAnnotation item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonAnnotationRequestBuilder notes(@Nonnull final String id) {
        return new PersonAnnotationRequestBuilder(getRequestUrlWithAdditionalSegment("notes") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ItemPatent collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ItemPatentCollectionRequestBuilder patents() {
        return new ItemPatentCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("patents"), getClient(), null);
    }

    /**
     * Gets a request builder for the ItemPatent item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ItemPatentRequestBuilder patents(@Nonnull final String id) {
        return new ItemPatentRequestBuilder(getRequestUrlWithAdditionalSegment("patents") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ItemPhone collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ItemPhoneCollectionRequestBuilder phones() {
        return new ItemPhoneCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("phones"), getClient(), null);
    }

    /**
     * Gets a request builder for the ItemPhone item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ItemPhoneRequestBuilder phones(@Nonnull final String id) {
        return new ItemPhoneRequestBuilder(getRequestUrlWithAdditionalSegment("phones") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the WorkPosition collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public WorkPositionCollectionRequestBuilder positions() {
        return new WorkPositionCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("positions"), getClient(), null);
    }

    /**
     * Gets a request builder for the WorkPosition item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public WorkPositionRequestBuilder positions(@Nonnull final String id) {
        return new WorkPositionRequestBuilder(getRequestUrlWithAdditionalSegment("positions") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ProjectParticipation collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ProjectParticipationCollectionRequestBuilder projects() {
        return new ProjectParticipationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("projects"), getClient(), null);
    }

    /**
     * Gets a request builder for the ProjectParticipation item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ProjectParticipationRequestBuilder projects(@Nonnull final String id) {
        return new ProjectParticipationRequestBuilder(getRequestUrlWithAdditionalSegment("projects") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the ItemPublication collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public ItemPublicationCollectionRequestBuilder publications() {
        return new ItemPublicationCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("publications"), getClient(), null);
    }

    /**
     * Gets a request builder for the ItemPublication item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public ItemPublicationRequestBuilder publications(@Nonnull final String id) {
        return new ItemPublicationRequestBuilder(getRequestUrlWithAdditionalSegment("publications") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the SkillProficiency collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public SkillProficiencyCollectionRequestBuilder skills() {
        return new SkillProficiencyCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("skills"), getClient(), null);
    }

    /**
     * Gets a request builder for the SkillProficiency item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public SkillProficiencyRequestBuilder skills(@Nonnull final String id) {
        return new SkillProficiencyRequestBuilder(getRequestUrlWithAdditionalSegment("skills") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the WebAccount collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public WebAccountCollectionRequestBuilder webAccounts() {
        return new WebAccountCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("webAccounts"), getClient(), null);
    }

    /**
     * Gets a request builder for the WebAccount item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public WebAccountRequestBuilder webAccounts(@Nonnull final String id) {
        return new WebAccountRequestBuilder(getRequestUrlWithAdditionalSegment("webAccounts") + "/" + id, getClient(), null);
    }
    /**
     *  Gets a request builder for the PersonWebsite collection
     *
     * @return the collection request builder
     */
    @Nonnull
    public PersonWebsiteCollectionRequestBuilder websites() {
        return new PersonWebsiteCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("websites"), getClient(), null);
    }

    /**
     * Gets a request builder for the PersonWebsite item
     *
     * @return the request builder
     * @param id the item identifier
     */
    @Nonnull
    public PersonWebsiteRequestBuilder websites(@Nonnull final String id) {
        return new PersonWebsiteRequestBuilder(getRequestUrlWithAdditionalSegment("websites") + "/" + id, getClient(), null);
    }
}
