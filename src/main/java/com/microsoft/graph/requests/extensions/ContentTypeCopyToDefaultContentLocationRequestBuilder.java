// Template Source: BaseMethodRequestBuilder.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;
import com.microsoft.graph.requests.extensions.IContentTypeCopyToDefaultContentLocationRequest;
import com.microsoft.graph.requests.extensions.ContentTypeCopyToDefaultContentLocationRequest;
import com.microsoft.graph.models.extensions.ItemReference;
import com.microsoft.graph.models.extensions.ContentType;
import com.microsoft.graph.core.BaseActionRequestBuilder;
import com.microsoft.graph.core.BaseFunctionRequestBuilder;
import com.microsoft.graph.core.IBaseClient;
import com.google.gson.JsonElement;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Content Type Copy To Default Content Location Request Builder.
 */
public class ContentTypeCopyToDefaultContentLocationRequestBuilder extends BaseActionRequestBuilder implements IContentTypeCopyToDefaultContentLocationRequestBuilder {

    /**
     * The request builder for this ContentTypeCopyToDefaultContentLocation
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     * @param sourceFile the sourceFile
     * @param destinationFileName the destinationFileName
     */
    public ContentTypeCopyToDefaultContentLocationRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions, final ItemReference sourceFile, final String destinationFileName) {
        super(requestUrl, client, requestOptions);
        bodyParams.put("sourceFile", sourceFile);
        bodyParams.put("destinationFileName", destinationFileName);
    }

    /**
     * Creates the IContentTypeCopyToDefaultContentLocationRequest
     *
     * @param requestOptions the options for the request
     * @return the IContentTypeCopyToDefaultContentLocationRequest instance
     */
    public IContentTypeCopyToDefaultContentLocationRequest buildRequest(final com.microsoft.graph.options.Option... requestOptions) {
        return buildRequest(getOptions(requestOptions));
    }

    /**
     * Creates the IContentTypeCopyToDefaultContentLocationRequest with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for the request
     * @return the IContentTypeCopyToDefaultContentLocationRequest instance
     */
    public IContentTypeCopyToDefaultContentLocationRequest buildRequest(final java.util.List<? extends com.microsoft.graph.options.Option> requestOptions) {
        ContentTypeCopyToDefaultContentLocationRequest request = new ContentTypeCopyToDefaultContentLocationRequest(
                getRequestUrl(),
                getClient(),
                requestOptions
        );

        if (hasParameter("sourceFile")) {
            request.body.sourceFile = getParameter("sourceFile");
        }

        if (hasParameter("destinationFileName")) {
            request.body.destinationFileName = getParameter("destinationFileName");
        }

        return request;
    }
}
