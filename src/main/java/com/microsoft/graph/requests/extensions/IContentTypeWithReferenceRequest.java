// Template Source: IBaseEntityWithReferenceRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.ContentType;
import com.microsoft.graph.models.extensions.ItemReference;
import com.microsoft.graph.requests.extensions.IContentTypeWithReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.IContentTypeCollectionWithReferencesRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnLinkCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnLinkRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnDefinitionCollectionWithReferencesRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnDefinitionWithReferenceRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnDefinitionCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IColumnDefinitionRequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.models.extensions.ContentType;
import com.microsoft.graph.http.IHttpRequest;
import com.microsoft.graph.serializer.IJsonBackedObject;


// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Content Type With Reference Request.
 */
public interface IContentTypeWithReferenceRequest extends IHttpRequest {

    void post(final ContentType newContentType, final IJsonBackedObject payload, final ICallback<? super ContentType> callback);

    ContentType post(final ContentType newContentType, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<? super ContentType> callback);

    ContentType get() throws ClientException;

	void delete(final ICallback<? super ContentType> callback);

	void delete() throws ClientException;

	void patch(final ContentType sourceContentType, final ICallback<? super ContentType> callback);

	ContentType patch(final ContentType sourceContentType) throws ClientException;

    IContentTypeWithReferenceRequest select(final String value);

    IContentTypeWithReferenceRequest expand(final String value);

}
